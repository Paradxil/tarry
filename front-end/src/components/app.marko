import Settings from "<settings>"
import Login from "<login>"
import Register from "<register>"
import Tracker from "<tracker>"
import Projects from "<projects>"
import Invoice from "<invoice>"

import utils from '../utils.js'

class {
    async onCreate() {
        this.state = {
            pages: {"login": Login, "register" :Register, "settings": Settings, "tracker": Tracker, 'projects': Projects, "invoice": Invoice},
            page: "loading",
            user: null,
            loggedin: false
        };
    }

    async onMount() {
        window.setInterval(this.checkStatus.bind(this), 1000 * 60);

        let response = await utils.get("/api/user");

        if(response.success) {
            this.state.loggedin = true;
            this.state.user = response.data;

            let currentPage = window.location.pathname||null;
            currentPage = currentPage.split('/')[1]||null;

            if(currentPage !== null && currentPage.length === 0) {
                currentPage = null;
            }

            this.changePage(currentPage||"tracker");
        }
        else {
            this.changePage("login");
        }
    }

    login(event) {
        this.state.user = event.user;
        this.state.loggedin = true;
        this.changePage("tracker");
    }

    logout(event) {
        this.state.user = null;
        this.state.loggedin = false;
        this.changePage("login");
    }

    async logoutUser(event) {
        let response = await utils.post("/api/logout");

        if(response.success) {
            this.logout(event);
        }
    }

    changePage(page) {
        this.state.page = page;
        this.setStateDirty("page");

        this.emit('changetitle', page + " - Time Tracker")

        window.history.replaceState({}, page, "/" + page);
    }

    async checkStatus() {
        let response = await utils.get("/api/status");

        if(response.success) {
            if(!response.data.loggedin && this.state.loggedin) {
                this.logout();
            }
        }
        else {
            //TODO: Display banner message to user
            console.log("Error connecting to server.");
        }
    }
}

style {
    :root {
        --background-1: #f8f4f1;
        --background-2: #9a8c98;
        --accent-1: #ebddd6;
        --accent-2: #9a8c98;
        --text-1: #444;
        --text-2: #fff;
        --rounded-radius: 3px;
        --padding: 8px;
        --padding-narrow: 4px;
        --padding-wide: 16px;
    }

    .page {
        max-width: 1200px;
    }
}

static function handleClick(event) {
    console.log("Clicked!");
}

ui-linear-layout vertical fillspace aligncenter
    @element fullwidth
        ui-linear-layout padded aligncenter gutter="4px"
            @element fillspace
                ui-text -- Time Tracker
            if(state.loggedin)
                @element
                    ui-button rounded filled=state.page==='tracker' icon="clock" on-click("changePage", 'tracker') title="Time tracker"
                @element
                    ui-button rounded filled=state.page==='projects' icon="clipboard" on-click("changePage", 'projects') title="Projects"
                @element
                    ui-button rounded filled=state.page==='invoice' icon="file" on-click("changePage", 'invoice') title="Invoice"
                @element
                    ui-button rounded filled=state.page==='reports' icon="bar-chart-2" on-click("changePage", 'reports') title="Reports"
                @element
                    ui-button rounded filled=state.page==='settings' icon="settings" on-click("changePage", 'settings') title="Settings"
                @element
                    ui-button rounded icon="log-out" on-click('logoutUser') title="Logout"
            else
                @element
                    ui-button rounded filled=state.page==='login' icon="log-in" on-click('changePage', 'login') title="Login"
                @element
                    ui-button rounded filled=state.page==='register' icon="user-plus" on-click("changePage", 'register') title="Register"
    @element class="page" fullwidth
        <${state.pages[state.page]} key=state.page on-login("login") on-logout("logout") user=state.user/>