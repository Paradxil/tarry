import utils from '../utils.js';

class {
    async onCreate(input) {
        this.state = {
            addProject: false,
            color: '#f94144',
            name: '',
            wage: 0,
            projects: [],
            editProjectIndex: null
        };

        this.userid = input.user?input.user._id||null:null;

        if(this.userid == null) {
            this.emit('logout');
            return;
        }

        let response = await utils.get("/api/project/all/");

        if(response.success) {
            this.state.projects = response.data;
        }

    }

    toggleProject() {
        this.state.addProject = !this.state.addProject;
    }

    setColor(event) {
        this.state.color = event.color;
    }

    setName(event) {
        this.state.name = event.value;
    }

    editProject(index) {
        this.state.editProjectIndex = index;
    }

    async addProject(event) {
        let response = await utils.post('/api/project', {
            userid: this.userid,
            name: this.state.name,
            color: this.state.color,
            wage: 2
        });

        if(response.success) {
            this.state.projects.push(response.data.project);
            this.setStateDirty("projects");
            this.state.addProject = false;
        }
    }

    async confirmDeleteProject(project, index) {
        this.emit("confirm", {
            title:"Delete Project?", 
            message:"Are you sure you want to delete the project '" + project.name + "'? This cannot be undone.",
            actions: [
                {
                    text: "Yes",
                    icon: "check",
                    callback: ()=>{
                        this.deleteProject(project._id, index);
                    }
                },
                {
                    text: "Cancel",
                    icon: "x",
                    callback: function() {}
                }
            ]}
        );
    }

    async deleteProject(id, index) {
        let response = await utils.delete('/api/project/' + id);

        if(response.success) {
            this.state.projects.splice(index, 1);
            this.setStateDirty("projects");
        }
    }
}

ui-container centered paddedwide
    if(state.editProjectIndex!==null)
        edit-project project=state.projects[state.editProjectIndex] projects=input.projects
    else
        ui-linear-layout vertical fillspace fullwidth gutter="8px"
            @element
                ui-button text="New Project" rounded icon=state.addProject?"minus":"plus" on-click("toggleProject")
            @element hidden=!state.addProject
                ui-linear-layout vertical accent paddedwide rounded
                    @element
                        ui-heading heading=3 alignleft -- Display
                    @element
                        ui-linear-layout aligncenter
                            @element
                                ui-color-select rounded paddedwide title="Choose Project Icon" on-input('setColor') color=state.color
                            @element fillspace
                                ui-textbox placeholder="Project Name" value=state.name on-input('setName')
                    @element hidden
                        ui-spacer
                        ui-heading heading=3 alignleft -- Billing
                    @element hidden
                        ui-linear-layout aligncenter
                            @element
                                ui-textbox placeholder="Hourly Wage" value=state.wage
                    @element
                        ui-spacer
                        ui-button text="Create Project" rounded centered on-click("addProject")
            for|project, index| of=state.projects
                @element
                    ui-linear-layout filled rounded padded aligncenter
                        @element
                            ui-element filled padded rounded theme={'--primary': project.color}
                        @element fillspace alignleft
                            ui-heading heading=3 -- ${project.name}
                        @element
                            ui-button icon="trash" rounded title="Delete Project" on-click("confirmDeleteProject", project, index)
                        @element
                            ui-button icon="edit-2" rounded title="Edit Project" on-click("editProject", index)


                    